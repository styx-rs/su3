var searchIndex = JSON.parse('{\
"su3":{"doc":"su3","t":[13,4,13,13,13,13,13,13,13,4,13,17,13,13,13,13,13,13,13,4,3,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,2,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,12,11,11,11,11],"n":["BlocklistFeed","ContentType","Dmg","DsaSha1","EcdsaSha256P256","EcdsaSha384P384","EcdsaSha512P521","EddsaSha512Ed25519ph","Exe","FileType","Html","MIN_VERSION_LENGTH","NewsFeed","Plugin","ReseedData","RouterUpdate","RsaSha2562048","RsaSha3843072","RsaSha5124096","SignatureType","Su3","TxtGz","Unknown","Xml","XmlGz","Zip","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","content","content_length","content_type","default","default","default","default","deku","deku_id","deku_id","deku_id","eq","eq","eq","eq","file_type","fmt","fmt","fmt","fmt","format_version","from","from","from","from","from_bytes","into","into","into","into","length","partial_cmp","partial_cmp","partial_cmp","partial_cmp","raw_content","raw_signature","raw_signer_id","raw_version","read","read","read","read","signature_length","signature_type","signer_id","signer_id_length","to_bits","to_bytes","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unused_0","unused_1","unused_2","unused_3","unused_4","unused_5","update","update","update","update","version","version_length","write","write","write","write"],"q":["su3","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Blocklist feed","Content type","DMG file","DSA-SHA1","ECDSA-SHA256-P256","ECDSA-SHA384-P384","ECDSA-SHA512-P521","EdDSA-SHA512-Ed25519ph","EXE file","File type","HTML file","Minimum length of the version field","News feed","Plugin (update)","Reseed data","Router update","RSA-SHA256-2048","RSA-SHA384-3072","RSA-SHA512-4096","Signature type","Typed representation of an SU3 file","GZ compressed TXT file","Unknown content type","XML file","GZ compressed XML file","ZIP file","","","","","","","","","","","","","","","","","","","","","Return the possibly decompressed representation of the …","Content length (not including header or signature)","Content type","","","","","","","","","","","","","File type","","","","","SU3 file format version","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the signature length in bytes","","","","","Raw content","Signature (length specified by field <code>signature_length</code>)","Signer ID (eg. “zzz@mail.i2p”; UTF-8 encoded; no …","Version (UTF-8 padded with null bytes)","","","","","Signature length","Signature type","Signer ID in form of a string slice","Signer ID length (in bytes)","","","","","","","","","","","","","","","","","","","","Unused field","Unused field","Unused field","Unused field","Unused field","Unused field","","","","","Version in form of a string slice (without the null bytes)","Version length (in bytes; includes padding)","","","",""],"i":[1,0,2,3,3,3,3,3,2,0,2,0,1,1,1,1,3,3,3,0,0,2,1,2,2,2,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,4,4,4,1,2,3,4,0,1,2,3,1,2,3,4,4,1,2,3,4,4,1,2,3,4,4,1,2,3,4,3,1,2,3,4,4,4,4,4,1,2,3,4,4,4,4,4,4,4,1,2,3,4,1,2,3,4,4,1,2,3,4,1,2,3,4,4,4,4,4,4,4,1,2,3,4,4,4,1,2,3,4],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[[]],[[]],[[]],[[]],[[1,1],5],[[2,2],5],[[3,3],5],[[4,4],5],[4,[[7,[6]]]],0,0,[[],1],[[],2],[[],3],[[],4],0,[1,[[10,[8,9]]]],[2,[[10,[8,9]]]],[3,[[10,[11,9]]]],[[1,1],12],[[2,2],12],[[3,3],12],[[4,4],12],0,[[1,13],14],[[2,13],14],[[3,13],14],[[4,13],14],0,[[]],[[]],[[]],[[]],[[],[[10,[9]]]],[[]],[[]],[[]],[[]],[3,11],[[1,1],[[15,[5]]]],[[2,2],[[15,[5]]]],[[3,3],[[15,[5]]]],[[4,4],[[15,[5]]]],0,0,0,0,[[16,17],[[10,[9]]]],[[16,17],[[10,[9]]]],[[16,17],[[10,[9]]]],[16,[[10,[9]]]],0,0,[4,[[10,[18,19]]]],0,[4,[[10,[[21,[8,20]],9]]]],[4,[[10,[[22,[8]],9]]]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],[[10,[4]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],23],[[],23],[[],23],[[],23],0,0,0,0,0,0,[1,[[10,[9]]]],[2,[[10,[9]]]],[3,[[10,[9]]]],[4,[[10,[9]]]],[4,[[10,[18,19]]]],0,[[1,21,17],[[10,[9]]]],[[2,21,17],[[10,[9]]]],[[3,21,17],[[10,[9]]]],[[4,21],[[10,[9]]]]],"p":[[4,"ContentType"],[4,"FileType"],[4,"SignatureType"],[3,"Su3"],[4,"Ordering"],[4,"Cow"],[6,"Result"],[15,"u8"],[4,"DekuError"],[4,"Result"],[15,"u16"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Option"],[3,"BitSlice"],[4,"Endian"],[15,"str"],[3,"Utf8Error"],[3,"Msb0"],[3,"BitVec"],[3,"Vec"],[3,"TypeId"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
